<div class="sect1">
<h2 id="ATBHkGXvFSWfEfPtxFTaGtPoeDEqqmKA">!</h2>
<div class="sectionbody">
<div class="openblock janini">
<div class="content">
<div class="message">Primitive types, variables, and expressions</div>
<div class="literalblock">
<div class="content">
<pre>float i;
i = 0;
i++;
i /= 2;
System.out.println(i);</pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="dmICKmgxEaeFVDnRmoouGYPomfQjelVz">You&#8217;re Learning a New Language</h2>
<div class="sectionbody">
<div class="paragraph">
<p>And your computer is a very eager but unforgiving conversant</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="HzvMPOcXRBcxTiCawrMAPICZfbcnZyYW">Our Approach</h2>
<div class="sectionbody">
<div class="ulist s">
<ul>
<li>
<p>Start small: with just a few lines of code</p>
</li>
<li>
<p>Work up to slightly more complicated examples</p>
</li>
<li>
<p>Then to complete functions and algorithms</p>
</li>
<li>
<p>And eventually to understanding entire files of Java source code</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="VBGzOzMUlIEziEhivMByHeyXbOzffNwX">What Are Computers Good At?</h2>
<div class="sectionbody">
<div class="olist arabic">
<ol class="arabic">
<li>
<p><strong>Basic math</strong></p>
</li>
<li>
<p>Simple decision making</p>
</li>
<li>
<p>Doing things over and over again very, very fast</p>
</li>
<li>
<p><strong>And storing data</strong></p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="AsbqATwBNKvdCYvjZAzsXqxQWdiLEquk">Variable Declaration</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">// I declare a variable named c of type char
char c;

// I'm going to use an int and call it first
int first;

// I hereby create a boolean and shall name it isSet
boolean isSet;</code></pre>
</div>
</div>
<div class="ulist s">
<ul>
<li>
<p>In Java every variable has a <em>name</em> and a <em>type</em></p>
</li>
<li>
<p>The name is for you, the programmer</p>
</li>
<li>
<p>The type is both for you and for Java</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="pRyNruakCGYMibaQiXiRPYtFSICkIVgF">Variable Names Must Be Unique</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">// I declare a variable named c of type char
char c;

// This doesn't work. How will I tell them apart?
int c;

// Even this doesn't work if c has already been declared.
char c;</code></pre>
</div>
</div>
<div class="ulist">
<ul>
<li>
<p>There are rules allowing the same name to be used in multiple places in the
same program</p>
</li>
<li>
<p>We&#8217;ll learn about them later</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="CsumONHCkuznIwwqbsOFPqYGzdhjQLYE">Good Variable Names</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Choosing good variable names will make your life a lot easier as a programmer.</p>
</div>
<div class="paragraph">
<p>Good variable names are:</p>
</div>
<div class="olist arabic s">
<ol class="arabic">
<li>
<p>Descriptive</p>
</li>
<li>
<p>Indicative of the variable&#8217;s function</p>
</li>
<li>
<p>As succinct as possible&#8230;&#8203;</p>
</li>
<li>
<p>But see #2 above</p>
</li>
<li>
<p>This will make more sense as we go along</p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="mYKcPepOrSkLsuLXBOmQMIUssNBBVQcW">Comments</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">// Also: this is a single-line comment.
// It starts with a //

/*
 * Here is another one. Multiline comments start with /* and end with
 */

// Comments are ignored by the computer, but can be
// some of the most important parts of your code
// They're for you and other humans</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="yTXvoDLkxPLfKdDEwqcbgcwbBjKliDkT">Variable Types</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Java has <em>eight</em>
<a href="http://cs.fit.edu/~ryan/java/language/java-data.html">primitive data types</a>.</p>
</div>
<div class="paragraph">
<p>All other data in Java is represented by <em>combinations</em> of these building blocks.
You can break them into four categories:</p>
</div>
<div class="olist arabic s">
<ol class="arabic">
<li>
<p><strong>Integers</strong>: <code>byte</code>, <code>short</code>, <code>int</code>, <code>long</code></p>
</li>
<li>
<p><strong>Floating point numbers</strong>: <code>float</code>, <code>double</code></p>
</li>
<li>
<p><strong>Character</strong>: <code>char</code></p>
</li>
<li>
<p><strong>True or false</strong>: <code>boolean</code></p>
</li>
</ol>
</div>
</div>
</div>
<div class="sect1">
<h2 id="eIhzSGdomQfxADXtZqDXzjXGEAqMmsWK">Variable Initialization</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">// I declare a variable named mine of type float
// and initialize it to 0.1
float mine = 0.1;

// Let there be a boolean called isItSnowing
// and initialize it to false
boolean isItSnowing = false;

// Declare timeSince1979 of type long
// and initially set it to 1204209
long timeSince1979 = 1204209;</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="PFgALdBwLvDVYkQRHZTIGjXoueZTccDF">Experimenting With Initialization</h2>
<div class="sectionbody">
<div class="literalblock janini">
<div class="content">
<pre>// Let's create and initialize some variables of different types
float x;
System.out.println(x);
// Try reinitializing the same variable to see what happens</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="mnqvSopbyJJQZGqGLivHdtSjHypzpwxd">Literals</h2>
<div class="sectionbody">
<div class="paragraph">
<p>A <em>literal</em> is a number or other value that appears directly in the source
code.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-java" data-lang="java">// 1000 is a long literal. Note the L suffix.
long big = 1000L;

// 'g' is a character literal.
char one = 'g';

// true and false are boolean literals.
boolean itsEarly = true;
boolean iSleptWell = false;</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="xnWysQQnbfFCUmWTfBvEpvXdTqHDwXlL">Variables Can Be Modified</h2>
<div class="sectionbody">
<div class="literalblock janini">
<div class="content">
<pre>// Let's modify some integers
int changing = 10;
changing = 20; // I can set them again
changing = 20 + 10; // Math is OK on the right side
changing += 1; // I have some special operators
changing /= 2; // +, -, / and * all work with =</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="upWVceueDWDXMLtzpLzaAIKPyAJKeHTm">Variables Must Maintain the Same Type</h2>
<div class="sectionbody">
<div class="literalblock janini">
<div class="content">
<pre>// Ruh-roh...
int changing = 10;
changing = 10.0;</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="BVHcSwysOjndMKbAuXNURlYpbJjXkOjX">!Ruh-Roh</h2>
<div class="sectionbody">
<div class="imageblock mx-auto meme">
<div class="content">
<img src="http://s2.quickmeme.com/img/83/83206ae67da70662c246b9cca0b92d2da77cae199a14e8d23e102739d5192b2e.jpg" alt="83206ae67da70662c246b9cca0b92d2da77cae199a14e8d23e102739d5192b2e">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="wGIfxmUfDEWxDVwvbMGAIYmZqXltNoYR">Variables Can Be Modified Using Other Variables</h2>
<div class="sectionbody">
<div class="literalblock janini">
<div class="content">
<pre>double first = 10.0;
double second = 5.0;
first = second; // This is assignment, not equality
second = 20.0;
first = second + 10.0;
double third = 2.0;
first = second + third;</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="bMGnqDmfcpDxPXDytpJKpUzIBGbeHrwH">What Makes Primitive Types <em>Primitive</em>?</h2>
<div class="sectionbody">
<div class="ulist s lead">
<div class="title">What makes the Java primitive types primitive?</div>
<ul>
<li>
<p>They can all be stored by the computer as a <em>single number</em>.</p>
</li>
</ul>
</div>
<div class="openblock s lead">
<div class="content">
<div class="paragraph">
<p>But wait&#8230;&#8203; what about <code>char</code>?</p>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="iRHwdJsVVeIxycGCObkWHCstYYMLMPNs">!What About Characters?</h2>
<div class="sectionbody">
<div class="imageblock mx-auto meme">
<div class="content">
<img src="http://4toc.com/fb/FBHelp/gfx/AppF_ASCIITable.png" alt="AppF ASCIITable" width="640">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="pPNGiUTPJIhsUrdVljKBdQvygNaaohAu">Our First Example of a <em>Convention</em></h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>There&#8217;s no law of the universe that says that the number 97 should represent
'a'.</p>
</div>
<div class="paragraph">
<p>It&#8217;s just what we&#8217;ve all agreed on.</p>
</div>
<div class="paragraph">
<p>We&#8217;ll discuss floating point representation in lab next week&mdash;it&#8217;s pretty
cool.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="IffEzqifWagrJAUVhbtbZpBeXbJOthRh">Why Are There Multiple Numeric Types?</h2>
<div class="sectionbody">
<div class="olist arabic lead">
<ol class="arabic">
<li>
<p><strong>Integers</strong>: <code>byte</code>, <code>short</code>, <code>int</code>, <code>long</code></p>
</li>
<li>
<p><strong>Floating point numbers</strong>: <code>float</code>, <code>double</code></p>
</li>
</ol>
</div>
<div class="openblock s">
<div class="content">
<div class="paragraph">
<p>Different types take up different amounts of <em>computer memory</em> and so can store
different values.</p>
</div>
</div>
</div>
<div class="openblock s">
<div class="content">
<div class="paragraph">
<p><strong>Don&#8217;t worry too much about how things are stored yet.</strong> But the limits are
important to understand.</p>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="pTpMZAKphudHMkrjPpLsyJkayPzKtKhG">Type Limitations</h2>
<div class="sectionbody">
<div class="literalblock janini">
<div class="content">
<pre>byte smallest = 10;
smallest += 256;
System.out.println(smallest);</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="jWVQatsSaYPEkUmTBXBmHDqOvukSqwsa">!Don&#8217;t Memorize: Look Up</h2>
<div class="sectionbody">
<div class="embed-responsive embed-responsive-4by3">
  <iframe class="full embed-responsive-item" src="https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html"></iframe>
</div>
</div>
</div>
<div class="sect1">
<h2 id="jCkFZoKCBKjtJmyLFfIlxyNqxWopKADh">Why Types</h2>
<div class="sectionbody">
<div class="ulist s lead">
<ul>
<li>
<p>Types force you to specify how much space you need to store your data. That
can make your program more efficient</p>
</li>
<li>
<p>Types also help catch some common programming errors</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="BOWngHncunytquMaQrLQnEBSLSwCARUu">Questions About Variables?</h2>
<div class="sectionbody">

</div>
</div>
<div class="sect1">
<h2 id="pcTKTHTGiagufvkaflflGOLUKcZkDgkr">EMP</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p><a href="https://cs125.cs.illinois.edu/info/resources/#emp">CS 199 EMP (Even More
Practice)</a>
is a chance for you to get (even) more practice.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>It&#8217;s held Monday nights from 5&ndash;7PM</p>
</li>
<li>
<p>You can register for it for one credit. If you do you&#8217;ll need to attend
regularly.</p>
</li>
<li>
<p>You can also not register and show up when you want. It&#8217;s open to all.</p>
</li>
<li>
<p>More details
<a href="https://cs125.cs.illinois.edu/info/resources/#emp">on the website</a>.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="EVpHggKAjqRkfDSVbqlphldYpsPjGgEx">!MP0 Progress</h2>
<div class="sectionbody">
<div class="embed-responsive embed-responsive-4by3">
  <iframe class="embed-responsive-item" src="https://cs125.cs.illinois.edu/m/grades/MPs"></iframe>
</div>
</div>
</div>
<div class="sect1">
<h2 id="KJGVlVMOjmoPsRDgcXxreAhLKMidfXqH">Announcements</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>Monday we will continue with the basics of imperative programming, including
conditionals and loops</p>
</li>
<li>
<p>We are giving a quiz starting today in the CBTF covering course
policies. Please
<a href="https://cbtf.engr.illinois.edu/">sign up</a>
and take it.</p>
</li>
<li>
<p><a href="/MP/0/">MP0</a> is out and due a week from today! At least get your
environment set up.
<a href="https://cs125.cs.illinois.edu/info/resources/#hours">Office hours</a>
until 5PM today.</p>
</li>
<li>
<p>Please fill out the
<a href="https://goo.gl/forms/7I6PEhK7C4t6iX1k1">intro survey</a>!
1% extra credit for anyone who does by <strong>Monday 1/22 at noon</strong>.</p>
</li>
</ul>
</div>
</div>
</div>