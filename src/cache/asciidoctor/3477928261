<div class="sect1">
<h2 id="jrRQIGHYmPhPUoMLkIWzHUsgoPNdbBOn">!</h2>
<div class="sectionbody">
<div class="openblock janini smallest compiler">
<div class="content">
<div class="message">More Practice with Recursion</div>
<div class="literalblock">
<div class="content">
<pre></pre>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="WAyrLFXUzCWZNywsuBwGVRNlfQyIsaxV">Recursive Tree Print Leaves</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Let&#8217;s print <em>only</em> leaf nodes: those that have neither a left nor a right child.</p>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="wFkePtuoPHtjiQgMUaRMxqrXubVNPQoY">What&#8217;s Our (Recursive) Algorithm?</h2>
<div class="sectionbody">

</div>
</div>
<div class="sect1">
<h2 id="nBBvXLuotvVfrtrnfEEjpVKYJqQqZZYK">Recursive Tree Print Leaves</h2>
<div class="sectionbody">
<div class="ulist s">
<ul>
<li>
<p><strong>Base case</strong>: <span class="s">We&#8217;ve reached a tree with no left or right node. It&#8217;s also a
a leaf node, so print our value.</span></p>
</li>
<li>
<p><strong>Recursive step</strong>: <span class="s">Consider our right tree and left tree separately.</span></p>
</li>
<li>
<p><strong>Combine results</strong>: <span class="s">Nothing to do here, just continue down the tree.</span></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="ApTsFupsyGxTnQxQNOutQbJTYqctEttB">!Recursive Tree Print Leaves</h2>
<div class="sectionbody">
<div class="literalblock janini compiler smallest">
<div class="content">
<pre>import java.util.Random;

public class Tree {
  Random random = new Random();
  public int value;
  public Tree right;
  public Tree left;

  Tree(int setValue) {
    value = setValue;
  }
  Tree(int[] array) {
    value = array[0];
    for (int i = 1; i &lt; array.length; i++) {
      add(array[i]);
    }
  }

  public void add(int value) {
    if (right == null) {
      right = new Tree(value);
    } else if (left == null) {
      left = new Tree(value);
    } else if (random.nextBoolean()) {
      right.add(value);
    } else {
      left.add(value);
    }
  }

  public void printLeaves() {
  }
}

public class Example {
  public static void main(String[] unused) {
    Tree tree = new Tree(new int[] { 1, 2, 3, 4 });
    tree.printLeaves();
  }
}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="MKTKEwmTmxMuIDInwIpRNxHlUZshIsmb">Recursive Tree Search</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>Let&#8217;s determine whether a tree contains a certain value.</p>
</div>
</div>
</div>
<div class="sect1 oneword">
<h2 id="ngirvffoqoVGBWAiUDJsvyNkZwEiGOey">What&#8217;s Our (Recursive) Algorithm?</h2>
<div class="sectionbody">

</div>
</div>
<div class="sect1">
<h2 id="ewLkRIFqyrsFlNUbTYbeQysFyvkpYWoD">Recursive Tree Search</h2>
<div class="sectionbody">
<div class="ulist s">
<ul>
<li>
<p><strong>Base case</strong>: <span class="s">We&#8217;ve reached a node with no descendants. Return true if
it&#8217;s value matches, zero otherwise.</span></p>
</li>
<li>
<p><strong>Recursive step</strong>: <span class="s">Consider our right tree and left tree separately.</span></p>
</li>
<li>
<p><strong>Combine results</strong>: <span class="s">Return true if either we or our right or left subtree
contain the search value.</span></p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="LByULNOsTbXEXKjWCAKWIPaJmRtpKfIm">!Recursive Tree Search</h2>
<div class="sectionbody">
<div class="literalblock janini compiler smallest">
<div class="content">
<pre>import java.util.Random;

public class Tree {
  Random random = new Random();
  public int value;
  public Tree right;
  public Tree left;

  Tree(int setValue) {
    value = setValue;
  }
  Tree(int[] array) {
    value = array[0];
    for (int i = 1; i &lt; array.length; i++) {
      add(array[i]);
    }
  }

  public void add(int value) {
    if (right == null) {
      right = new Tree(value);
    } else if (left == null) {
      left = new Tree(value);
    } else if (random.nextBoolean()) {
      right.add(value);
    } else {
      left.add(value);
    }
  }

  public static boolean search(Tree tree, int value) {
  }
}

public class Example {
  public static void main(String[] unused) {
    Tree tree = new Tree(new int[] { 1, 2, 3, 4 });
    System.out.println(Tree.search(tree, 4));
  }
}</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="OzjXTgMoWVzPCuhDMmFiABSwulDOvcZT">Exam Announcement</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p><strong>We will no longer hold a three-hour seated exam in Foellinger Auditorium on
5/11/2018.</strong></p>
</div>
<div class="paragraph">
<p>Instead, we will hold a rolling exam in the CBTF from Sunday 5/6/2018&ndash;Wednesday
5/9/2018.</p>
</div>
<div class="ulist">
<ul>
<li>
<p>The TAs <sup class="footnote">[<a id="_footnoteref_1" class="footnote" href="#_footnote_1" title="View footnote.">1</a>]</sup> and I have decided together
that a computerized exam is a better approach. It will be much fairer and both
faster and easier to grade.</p>
</li>
<li>
<p>The exam will consist of a mixture of (autograded) programming questions,
(autograded) multiple-choice questions, and TA-graded free answer questions.</p>
</li>
<li>
<p>If you changed your travel plans to stay for the Friday exam, I apologize.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="udWeLekzKVnByaRnHrpSzgDrSKYkmeuT">CBTF Programming Questions</h2>
<div class="sectionbody">
<div class="paragraph lead">
<p>The CBTF final exam <em>will include</em> programming questions.</p>
</div>
<div class="ulist s">
<ul>
<li>
<p>The editing interface will be familiar to you from the lecture examples.</p>
</li>
<li>
<p>The grading interface will be familiar to you from the MPs.</p>
</li>
<li>
<p>We will be rolling this out as soon as possible. At minimum you&#8217;ll have a few
chances to practice on the last few quizzes leading up to the exam.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="ozTEehqBqloFcjlwPAYzKAswtrxjuDlr">Announcements</h2>
<div class="sectionbody">
<div class="ulist">
<ul>
<li>
<p>The <a href="/MP/5/">MP5</a> deadline is today at 5PM.</p>
</li>
<li>
<p>We&#8217;ve added an
<a href="https://cs125.cs.illinois.edu/info/feedback/">anonymous feedback form</a>
to the course website. Use it to give us feedback!</p>
</li>
<li>
<p>My office hours continue today at 11AM in the lounge outside of Siebel 0226.</p>
</li>
</ul>
</div>
</div>
</div>
<div id="footnotes">
<hr>
<div class="footnote" id="_footnote_1">
<a href="#_footnoteref_1">1</a>. Who have to grade the exam&#8230;&#8203;
</div>
</div>